# -*- coding: utf-8 -*-
"""Face_Detector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cqycYxjq3jYOxoM9WYg0WpwwTVCBkUQq
"""

!nvidia-smi

from google.colab import drive
drive.mount('/content/gdrive')

import os
path="/content/gdrive/My Drive/Project"
os.chdir(path)

# Commented out IPython magic to ensure Python compatibility.
# %cd darknetGoogleColab
!ls
!chmod +x ./darknet

import numpy as np
from math import * 
from PIL import Image
import shutil

import numpy as np
imagepath_filename = 'FDDBimagepath.txt'
with open(imagepath_filename) as f:
  lines = [line.rstrip('\n') for line in f]

rand_idx = np.random.randint(0, len(lines), 600)
i = 0

# Create train.txt
with open("train.txt", "w") as f:
    for i in np.arange(len(lines)):
        if i not in rand_idx:
            f.write('traindata/img/pic/' + lines[i]+'.jpg'+'\n')

# Create valid.txt        
with open("valid.txt", "w") as f:
    for i in np.arange(len(lines)):
        if i in rand_idx:
            f.write('traindata/img/pic/' + lines[i]+'.jpg'+'\n')

!ls

!echo face > obj.names

# Config obj.data config file
!echo classes=1 > obj.data
!echo train=train.txt >> obj.data
!echo valid=test.txt >> obj.data
!echo names=obj.names >> obj.data
!echo backup=backup >> obj.data
!echo valid=test.txt >> test.data
!echo names=obj.names >> test.data

os.path.exists("obj.data")
os.path.exists("yolov3.cfg")



"""Training"""

#Compile Darknet
!make

!chmod +x ./darknet

#!wget https://pjreddie.com/media/files/darknet53.conv.74

!./darknet detector train obj.data yolov3.cfg backup/yolov3_last.weights -dont_show

# Commented out IPython magic to ensure Python compatibility.
#download files
def imShow(path):
  import cv2
  import matplotlib.pyplot as plt
#   %matplotlib inline

  image = cv2.imread(path)
  height, width = image.shape[:2]
  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

  fig = plt.gcf()
  fig.set_size_inches(18, 10)
  plt.axis("off")
  #plt.rcParams['figure.figsize'] = [10, 5]
  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
  plt.show()
  
  
def upload():
  from google.colab import files
  uploaded = files.upload() 
  for name, data in uploaded.items():
    with open(name, 'wb') as f:
      f.write(data)
      print ('saved file', name)
      
def download(path):
  from google.colab import files
  files.download(path)

!./darknet detector map obj.data yolov3.cfg backup/yolo.weights -iou_thresh 0.5

!./darknet detector test obj.data yolov3.cfg backup/yolov3_last.weights -dont_show -ext_output traindata/test/face1.jpg result.txt
imShow('predictions.jpg')

