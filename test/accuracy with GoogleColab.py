# -*- coding: utf-8 -*-
"""Accuracy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eS3piI81labqzicnv38V9JGrrVmGBIIW
"""

from google.colab import drive
drive.mount('/content/gdrive')

!nvidia-smi

import os
path="/content/gdrive/My Drive/Project"
os.chdir(path)

# Commented out IPython magic to ensure Python compatibility.
# %cd darknetGoogleColab
!ls
!chmod +x ./darknet

!echo face > obj.names

# Config obj.data config file
!echo classes=1 > obj.data
!echo train=train.txt >> obj.data
!echo valid=test.txt >> obj.data
!echo names=obj.names >> obj.data
!echo backup=backup >> obj.data
!echo valid=test.txt >> test.data
!echo names=obj.names >> test.data

os.path.exists("obj.data")
os.path.exists("yolov3.cfg")

import glob2
import numpy as np

all_files = []
for ext in ["*.png", "*.jpeg", "*.jpg"]:
  images = glob2.glob(os.path.join("traindata/test/data", ext))
  all_files += images

# Create test.txt
with open("test.txt", "w") as f:
  for idx in np.arange(len(all_files)):
    # if idx not in rand_idx:
    f.write(all_files[idx]+'\n')

# Commented out IPython magic to ensure Python compatibility.
# Cd vào thư mục chưa tập test
# %cd traindata/test

import numpy as np
from math import * 
from PIL import Image
import shutil

# Chuyển tọa độ label sang định dạng của yolo V3
def getimagename(line):
    x=line.split(".")
    y=x[0]
    return y
filename='label.txt'
with open(filename) as f:
    lines=[line.rstrip('\n') for line in f]
i=0
s=0
while i<len(lines):
    img_file= lines[i]
    rect_filename=getimagename(lines[i])+'.txt'
    f=open(rect_filename,'w')
    img=Image.open(img_file)
    w=img.size[0]
    h=img.size[1]
    num_faces=int(lines[i+1])
    for j in range(num_faces):
        file=lines[i+2+j].split()[0:4]
        x1= float(file[0])
        x2 = float(file[2])
        y1 = float(file[1])
        y2 = float(file[3]) 
        
        m= (x1+x2)/2
        n= (y1 + y2)/2
        x=m/w
        y=n/h
        w1= (x2-x1)/w
        h1=(y2-y1)/h
        text = '0' + ' '+str(x)+' '+str(y)+' '+str(w1)+' '+str(h1)+'\n'
        f.write(text)
    i = i + num_faces + 2
    s+=num_faces
print(s)    
f.close()

!./darknet detector map obj.data yolov3.cfg backup/yolov3_final.weights -iou_thresh 0.75